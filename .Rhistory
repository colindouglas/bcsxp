?case_when
?everything
devtools::install("bcsxp")
document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
read_bcsxp
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
devtools::install_github("colindouglas/bcsxp")
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
read_bcsxp
library(bcsxp)
read_bcsxp
devtools::install_github("colindouglas/bcsxp")
git remote add origin git@github.com:colindouglas/bcsxp.git
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
read_bcsxp
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
read_bcsxp
library(bcsxp)
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
read_bcsxp
library(bcsxp)
read_bcsxp
df <- read_bcsxp(path = "test_data/S201904221.BCSXp")
View(df)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
View(df)
iris
iris <- as_tibble(iris)
library(tidyverse)
iris <- as_tibble(iris)
View(iris)
iris_fixed <- iris %>%
select(Species, everything(), Sepal.Width)
View(iris_fixed)
devtools::install_github("colindouglas/bcsxp")
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
View(df)
library(bcsxp)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
View(df)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
View(df)
devtools::install_github("colindouglas/bcsxp")
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
devtools::install_github("colindouglas/bcsxp")
library(bcsxp)
library(tidyverse)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
View(df)
devtools::load_all(".")
devtools::load_all(".")
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
View(df)
df <- read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
install.packages('usethis')
install.packages("usethis")
usethis::use_testthat()
use_test()
testthat::use_test()
usethis::use_test()
usethis::use_test()
usethis::use_test()
read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE)
read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE) %>% length()
nrows(read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE))
nrow(read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE))
ncol(read_bcsxp(path = "test_data/S201904221.BCSXp", include_subassays = TRUE))
read_bcsxp(path = "../test_data/S201904221.BCSXp", include_subassays = TRUE)
read_bcsxp(path = "./test_data/S201904221.BCSXp", include_subassays = TRUE)
wd()
getwd()
setwd("..")
test_that("loading test file returns right number of rows", {
expect_equal(
nrow(
read_bcsxp(path = "../test_data/S201904221.BCSXp", include_subassays = TRUE)
),
973)
})
setwd("..")
set.wd("bcsxp/testthat/tests")
setwd("bcsxp/testthat/tests")
setwd("bcsxp")
setwd("./bcsxp")
setwd("~/projects/bcsxp")
setwd("~/projects/bcsxp/tests/testthat")
read_bcsxp(path = "../data/S2019011251.BCSXp", include_subassays = TRUE)
read_bcsxp(path = "../data/S201911251.BCSXp", include_subassays = TRUE)
nrow(read_bcsxp(path = "../data/S201911251.BCSXp", include_subassays = TRUE))
test_that("loading test file #1 returns right number of rows", {
expect_equal(
nrow(
read_bcsxp(path = "../data/S201904221.BCSXp", include_subassays = TRUE)
),
973)
})
test_that("loading test file #1 returns right number of columns with subassays", {
expect_equal(
ncol(
read_bcsxp(path = "../data/S201904221.BCSXp", include_subassays = TRUE)
),
15)
})
test_that("loading test file #1 returns right number of columns without subassays", {
expect_equal(
ncol(
read_bcsxp(path = "../data/S201904221.BCSXp", include_subassays = FALSE)
),
14)
})
test_that("loading test file #2 returns right number of rows", {
expect_equal(
nrow(
read_bcsxp(path = "../data/S201911251.BCSXp", include_subassays = TRUE)
),
344)
})
test_that("loading test file #2 returns right number of columns with subassays", {
expect_equal(
ncol(
read_bcsxp(path = "../data/S201911251.BCSXp", include_subassays = TRUE)
),
15)
})
test_that("loading test file #2 returns right number of columns without subassays", {
expect_equal(
ncol(
read_bcsxp(path = "../data/S201911251.BCSXp", include_subassays = FALSE)
),
14)
})
path <- "../data/C201712072.BCSXp"
if (file.exists(path)) {
file <- readLines(path, warn = FALSE) # Suppress warnings because the last line is always malformed
} else {
stop("Path does not exist: ", path)
}
a
path <- "../data/C201712072.BCSXp" # debug
if (file.exists(path)) {
file <- readLines(path, warn = FALSE) # Suppress warnings because the last line is always malformed
} else {
stop("Path does not exist: ", path)
}
